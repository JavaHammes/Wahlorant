apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:9.3.6
        ports:
        - containerPort: 3000
        env:
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: "admin"
        - name: GF_AUTH_ANONYMOUS_ENABLED
          value: "true"
        - name: GF_AUTH_ANONYMOUS_ORG_ROLE
          value: "Viewer"
        - name: GF_DATAPROXY_TIMEOUT                 
          value: "300"
        - name: GF_DATAPROXY_KEEP_ALIVE_SECONDS      
          value: "60"
        - name: GF_SERVER_READ_TIMEOUT               
          value: "300"
        - name: GF_SERVER_WRITE_TIMEOUT              
          value: "300"
        - name: GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH
          value: "/var/lib/grafana/dashboards/wahlorant-dashboard.json"
        - name: GF_FEATURE_TOGGLES_ENABLE
          value: "newPanelChromeUI,lokiQuerySplitting"
        resources:
          limits:
            memory: "1.5Gi"   # Erhöht für bessere Performance
            cpu: "1500m"
          requests:
            memory: "768Mi"
            cpu: "750m"
        volumeMounts:
        - name: grafana-storage
          mountPath: /var/lib/grafana
        - name: grafana-datasources
          mountPath: /etc/grafana/provisioning/datasources
          readOnly: false
        - name: grafana-dashboards-provision
          mountPath: /etc/grafana/provisioning/dashboards
          readOnly: false
        - name: grafana-dashboards
          mountPath: /var/lib/grafana/dashboards
          readOnly: false
      volumes:
      - name: grafana-storage
        emptyDir: {}
      - name: grafana-datasources
        configMap:
          name: grafana-datasources
      - name: grafana-dashboards-provision
        configMap:
          name: grafana-dashboards-provision
      - name: grafana-dashboards
        configMap:
          name: grafana-dashboards

---
apiVersion: v1
kind: Service
metadata:
  name: grafana
spec:
  selector:
    app: grafana
  ports:
  - port: 3000
    targetPort: 3000
  type: ClusterIP