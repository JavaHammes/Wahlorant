apiVersion: apps/v1
kind: Deployment
metadata:
  name: loki
  labels:
    app: loki
spec:
  replicas: 1
  selector:
    matchLabels:
      app: loki
  template:
    metadata:
      labels:
        app: loki
    spec:
      containers:
      - name: loki
        image: grafana/loki:2.8.0
        args:
        - -config.file=/etc/loki/loki-config.yaml
        ports:
        - containerPort: 3100
          name: http-metrics
        - containerPort: 9096
          name: grpc
        resources:
          limits:
            memory: "2Gi"      # Erhöht für bessere Performance
            cpu: "1500m"       # Erhöht für bessere Performance
          requests:
            memory: "1Gi"      # Erhöht 
            cpu: "750m"        # Erhöht
        readinessProbe:         # Readiness-Probe hinzufügen
          httpGet:
            path: /ready
            port: http-metrics
          initialDelaySeconds: 45
          timeoutSeconds: 3
        livenessProbe:          # Liveness-Probe hinzufügen
          httpGet:
            path: /ready
            port: http-metrics
          initialDelaySeconds: 45
          timeoutSeconds: 3
        volumeMounts:
        - name: config
          mountPath: /etc/loki
        - name: storage
          mountPath: /tmp/loki
      volumes:
      - name: storage
        emptyDir: 
          sizeLimit: 8Gi     # Größeres Limit für persistenten Speicher
      - name: config
        configMap:
          name: loki-config

---
apiVersion: v1
kind: Service
metadata:
  name: loki
spec:
  selector:
    app: loki
  ports:
  - port: 3100
    targetPort: 3100
    name: http-metrics
  - port: 9096
    targetPort: 9096
    name: grpc
  type: ClusterIP