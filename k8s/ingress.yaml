apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: wahlorant-ingress
  annotations:
    #############################################
    # âœ… General Security Settings
    #############################################

    # Enable support for regular expressions in paths (useful for advanced routing).
    nginx.ingress.kubernetes.io/use-regex: "true"

    # Hide the NGINX version in response headers to prevent attackers from fingerprinting.
    nginx.ingress.kubernetes.io/server-tokens: "false"

    #############################################
    # ðŸ”¥ Web Application Firewall (WAF) - ModSecurity
    #############################################

    # Enable ModSecurity, a Web Application Firewall (WAF) that helps detect and block malicious traffic.
    nginx.ingress.kubernetes.io/modsecurity-enabled: "true"

    # Load a custom ModSecurity configuration to filter and block attacks like:
    # - SQL Injection (SQLi) ðŸ›‘
    # - Cross-Site Scripting (XSS) ðŸ›‘
    # - Command Injection (RCE) ðŸ›‘
    # - Local File Inclusion (LFI) ðŸ›‘
    # - Automated scanners & bots ðŸ›‘
    # - Other common web attacks ðŸš¨
    nginx.ingress.kubernetes.io/modsecurity-snippet: |
      # Enable the ModSecurity engine to inspect incoming requests and block threats.
      SecRuleEngine On 

      # Enable request body inspection to detect malicious payloads in POST/PUT requests.
      SecRequestBodyAccess On  

      # Disable response body inspection (Off by default for better performance). 
      # Turning this On would allow filtering of server responses.
      SecResponseBodyAccess Off

      # Load the OWASP Core Rule Set (CRS), a set of pre-configured security rules for ModSecurity.
      Include /etc/modsecurity/owasp-crs/crs-setup.conf
      Include /etc/modsecurity/owasp-crs/rules/*.conf

    #############################################
    # ðŸš€ Rate Limiting & DDoS Protection
    #############################################

    # Limit requests per second per IP address (prevents abuse & brute-force attacks).
    nginx.ingress.kubernetes.io/limit-rps: "10"

    # Allow short bursts of up to 20 requests before enforcing rate limits.
    nginx.ingress.kubernetes.io/limit-burst: "20"

    # Limit the maximum number of simultaneous connections from a single IP (prevents resource exhaustion).
    nginx.ingress.kubernetes.io/limit-connections: "50"

    # Restrict the maximum size of incoming requests (prevents large payload attacks & DoS attempts).
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"

    #############################################
    # ðŸ”’ Enforce HTTPS (TLS) - Currently Disabled for Development
    #############################################

    # Prevent automatic HTTPS redirection (only disabled in development mode!).
    # In production, this should be set to "true" to enforce secure connections.
    nginx.ingress.kubernetes.io/ssl-redirect: "false"

spec:
  rules:
  # Frontend subdomain
  - host: app.wahlorant.localhost
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend-service
            port:
              number: 80

  # Backend API subdomain
  - host: api.wahlorant.localhost
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: backend-service
            port:
              number: 5000

  # Adminer subdomain (dev only)
  - host: adminer.wahlorant.localhost
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: adminer-service
            port:
              number: 8080